/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laptrinhcity.giaodien;

import java.awt.Color;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import laptrinhcity.DAO.NhanVienDAO;
import laptrinhcity.utils.Auth;
import laptrinhcity.utils.MsgBox;

/**
 *
 * @author SuongNguyen
 */
public class CuaSoDoiMK extends javax.swing.JInternalFrame {

    /**
     * Creates new form CuaSoDoiMK1
     */
    public CuaSoDoiMK() {
        initComponents();
        setLocation(245, 120);
        txtTenDangNhap.setText(Auth.user.getHoTen());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblImagePersonal = new javax.swing.JLabel();
        lblDoiMauKhau1 = new javax.swing.JLabel();
        txtTenDangNhap = new javax.swing.JTextField();
        txtMatKhauCu = new javax.swing.JPasswordField();
        txtMatKhauMoi = new javax.swing.JPasswordField();
        txtXacNhanMk = new javax.swing.JPasswordField();
        btnDoi = new javax.swing.JButton();
        ckbHienThi = new javax.swing.JCheckBox();

        setClosable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblImagePersonal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/laptrinhcity/giaodien/hinh/avatar1.png"))); // NOI18N
        getContentPane().add(lblImagePersonal, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 58, 161, -1));

        lblDoiMauKhau1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblDoiMauKhau1.setText("Đổi Mật Khẩu");
        getContentPane().add(lblDoiMauKhau1, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 11, -1, 45));

        txtTenDangNhap.setEditable(false);
        txtTenDangNhap.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtTenDangNhap.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtTenDangNhap.setMargin(new java.awt.Insets(2, 8, 2, 2));
        getContentPane().add(txtTenDangNhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 61, 241, 28));

        txtMatKhauCu.setForeground(new java.awt.Color(153, 153, 153));
        txtMatKhauCu.setText("Mật khẩu cũ");
        txtMatKhauCu.setEchoChar('\u0000');
        txtMatKhauCu.setMargin(new java.awt.Insets(2, 8, 2, 2));
        txtMatKhauCu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMatKhauCuFocusGained(evt);
            }
        });
        getContentPane().add(txtMatKhauCu, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 107, 241, 28));

        txtMatKhauMoi.setForeground(new java.awt.Color(153, 153, 153));
        txtMatKhauMoi.setText("Mẩu khẩu mới");
        txtMatKhauMoi.setEchoChar('\u0000');
        txtMatKhauMoi.setMargin(new java.awt.Insets(2, 8, 2, 2));
        txtMatKhauMoi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMatKhauMoiFocusGained(evt);
            }
        });
        getContentPane().add(txtMatKhauMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 153, 241, 28));

        txtXacNhanMk.setForeground(new java.awt.Color(153, 153, 153));
        txtXacNhanMk.setText("Xác nhận mật khẩu mới");
        txtXacNhanMk.setEchoChar('\u0000');
        txtXacNhanMk.setMargin(new java.awt.Insets(2, 8, 2, 2));
        txtXacNhanMk.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtXacNhanMkFocusGained(evt);
            }
        });
        getContentPane().add(txtXacNhanMk, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 208, 241, 28));

        btnDoi.setBackground(new java.awt.Color(0, 0, 0));
        btnDoi.setForeground(new java.awt.Color(255, 255, 255));
        btnDoi.setText("Xác nhận");
        btnDoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiActionPerformed(evt);
            }
        });
        getContentPane().add(btnDoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 265, 241, 34));

        ckbHienThi.setText("Hiện thị mật khẩu");
        ckbHienThi.setEnabled(false);
        ckbHienThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbHienThiActionPerformed(evt);
            }
        });
        getContentPane().add(ckbHienThi, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 243, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMatKhauCuFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauCuFocusGained
        changeStatus(txtMatKhauCu);
    }//GEN-LAST:event_txtMatKhauCuFocusGained

    private void txtMatKhauMoiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauMoiFocusGained
        changeStatus(txtMatKhauMoi);
    }//GEN-LAST:event_txtMatKhauMoiFocusGained

    private void txtXacNhanMkFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtXacNhanMkFocusGained
        changeStatus(txtXacNhanMk);
    }//GEN-LAST:event_txtXacNhanMkFocusGained

    private void btnDoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiActionPerformed
        doiMatKhau();
    }//GEN-LAST:event_btnDoiActionPerformed

    private void ckbHienThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbHienThiActionPerformed
        showPassword();
    }//GEN-LAST:event_ckbHienThiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDoi;
    private javax.swing.JCheckBox ckbHienThi;
    private javax.swing.JLabel lblDoiMauKhau1;
    private javax.swing.JLabel lblImagePersonal;
    private javax.swing.JPasswordField txtMatKhauCu;
    private javax.swing.JPasswordField txtMatKhauMoi;
    private javax.swing.JTextField txtTenDangNhap;
    private javax.swing.JPasswordField txtXacNhanMk;
    // End of variables declaration//GEN-END:variables

    private void doiMatKhau() {
        if (isError()) return;
        
        String matKhauCu = String.valueOf(txtMatKhauCu.getPassword());
        String matKhauMoi = String.valueOf(txtMatKhauMoi.getPassword());
        
        if (!Auth.user.getMatKhau().equals(matKhauCu)) {
            MsgBox.alert(this, "Mật khẩu cũ không đúng!");
            return;
        }

        Auth.user.setMatKhau(matKhauMoi);
        new NhanVienDAO().update(Auth.user);
        MsgBox.alert(this, "Đổi mật khẩu thành công");
        this.dispose();
    }
    
    private void changeStatus(JTextField x) {
        changeColor(x);
        clearText(x);
        ckbHienThi.setEnabled(true);
        if (!ckbHienThi.isSelected()) ((JPasswordField) x).setEchoChar('\u25cf');
    }
    
    private void changeColor(JTextField x) {
        x.setForeground(Color.BLACK);
    }
    
    private void clearText(JTextField x) {
        x.setText("");
    }
    
    private void showPassword() {
        if (ckbHienThi.isSelected()) {
            setEcho('\u0000');
        } else {
            setEcho('\u25cf');
        }
    }
    
    private void setEcho(char echo) {
        txtMatKhauCu.setEchoChar(echo);
        txtMatKhauMoi.setEchoChar(echo);
        txtXacNhanMk.setEchoChar(echo);
    }
    
    private boolean isError() {
        if (isEmpty()) {
            return true;
        }
        if (isShort()) {
            return true;
        }
        
        if (!isMatch()) {
            return true;
        }
        return false;
    }
    
    private boolean isEmpty() {
        if (String.valueOf(txtMatKhauCu.getPassword()).length() == 0 ||
            String.valueOf(txtMatKhauMoi.getPassword()).length() == 0 ||
            String.valueOf(txtXacNhanMk.getPassword()).length() == 0)
        {
            MsgBox.alert(this, "Phải nhập đủ thông tin!");
            return true;
        }
        return false;
    }
    
    private boolean isShort() {
        if (String.valueOf(txtMatKhauMoi.getPassword()).length() < 8) {
            MsgBox.alert(this, "Mật khẩu phải lớn hơn 8");
            txtMatKhauMoi.requestFocus();
            return true;
        }
        return false;
    }
    
    private boolean isMatch() {
        if(String.valueOf(txtMatKhauMoi.getPassword()).equals(String.valueOf(txtXacNhanMk.getPassword()))) {
            return true;
        }
        MsgBox.alert(this, "Mật khẩu mới phải trùng với xác nhận mật khẩu");
        return false;
    }
}
