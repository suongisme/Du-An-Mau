/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laptrinhcity.giaodien;

import java.awt.Component;
import java.io.File;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import laptrinhcity.DAO.ChuyenDeDAO;
import laptrinhcity.entity.ChuyenDe;
import laptrinhcity.utils.Auth;
import laptrinhcity.utils.MsgBox;
import laptrinhcity.utils.XImage;

/**
 *
 * @author SuongNguyen
 */
public class QuanLyChuyenDe extends javax.swing.JInternalFrame {

    /**
     * Creates new form QuanLyChuyenDe1
     *
     * @param tabsPage
     */
    public QuanLyChuyenDe(int tabsPage) {
        initComponents();
        setLocation(135, 0);
        tabs.setSelectedIndex(tabsPage);
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblQLChuyenDe = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        pnlCapNhat = new javax.swing.JPanel();
        lblAnh = new javax.swing.JLabel();
        pnlThongTin = new javax.swing.JPanel();
        txtHocPhiChuyenDe = new javax.swing.JTextField();
        lblHocPhiChuyenDe = new javax.swing.JLabel();
        txtThoiLuongChuyenDe = new javax.swing.JTextField();
        lblThoiGianChuyenDe = new javax.swing.JLabel();
        txtTenChuyenDe = new javax.swing.JTextField();
        lblTenChuyenDe = new javax.swing.JLabel();
        txtMaChuyenDe = new javax.swing.JTextField();
        lblMaChuyenDe = new javax.swing.JLabel();
        lblMoTaChuyenDe = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMoTaChuyenDe = new javax.swing.JTextArea();
        pnlNutBam = new javax.swing.JPanel();
        btnThemChuyenDe = new javax.swing.JButton();
        btnSuaChuyenDe = new javax.swing.JButton();
        btnXoaChuyenDe = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        btnDiChuyen = new javax.swing.JPanel();
        btnBatDau = new javax.swing.JButton();
        btnLui = new javax.swing.JButton();
        btnTien = new javax.swing.JButton();
        btnKetThuc = new javax.swing.JButton();
        pnlDanhSach = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDanhSach = new javax.swing.JTable();

        setClosable(true);

        lblQLChuyenDe.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblQLChuyenDe.setForeground(new java.awt.Color(0, 0, 204));
        lblQLChuyenDe.setText("QUẢN LÝ CHUYÊN ĐỀ");

        pnlCapNhat.setAutoscrolls(true);

        lblAnh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAnhMouseClicked(evt);
            }
        });

        lblHocPhiChuyenDe.setText("Học phí");

        lblThoiGianChuyenDe.setText("Thời lượng(giờ)");

        lblTenChuyenDe.setText("Tên chuyên đề");

        lblMaChuyenDe.setText("Mã chuyên đề");

        javax.swing.GroupLayout pnlThongTinLayout = new javax.swing.GroupLayout(pnlThongTin);
        pnlThongTin.setLayout(pnlThongTinLayout);
        pnlThongTinLayout.setHorizontalGroup(
            pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtHocPhiChuyenDe)
                    .addGroup(pnlThongTinLayout.createSequentialGroup()
                        .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHocPhiChuyenDe)
                            .addComponent(lblThoiGianChuyenDe)
                            .addComponent(lblTenChuyenDe)
                            .addComponent(lblMaChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtThoiLuongChuyenDe)
                    .addComponent(txtTenChuyenDe)
                    .addComponent(txtMaChuyenDe)))
        );
        pnlThongTinLayout.setVerticalGroup(
            pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinLayout.createSequentialGroup()
                .addComponent(lblMaChuyenDe)
                .addGap(5, 5, 5)
                .addComponent(txtMaChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTenChuyenDe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(txtTenChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(lblThoiGianChuyenDe)
                .addGap(4, 4, 4)
                .addComponent(txtThoiLuongChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHocPhiChuyenDe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHocPhiChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        lblMoTaChuyenDe.setText("Mô tả chuyên đề");

        txtMoTaChuyenDe.setColumns(20);
        txtMoTaChuyenDe.setLineWrap(true);
        txtMoTaChuyenDe.setRows(5);
        txtMoTaChuyenDe.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtMoTaChuyenDe);

        pnlNutBam.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btnThemChuyenDe.setText("Thêm");
        btnThemChuyenDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemChuyenDeActionPerformed(evt);
            }
        });
        pnlNutBam.add(btnThemChuyenDe);

        btnSuaChuyenDe.setText("Sửa");
        btnSuaChuyenDe.setEnabled(false);
        btnSuaChuyenDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaChuyenDeActionPerformed(evt);
            }
        });
        pnlNutBam.add(btnSuaChuyenDe);

        btnXoaChuyenDe.setText("Xóa");
        btnXoaChuyenDe.setEnabled(false);
        btnXoaChuyenDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaChuyenDeActionPerformed(evt);
            }
        });
        pnlNutBam.add(btnXoaChuyenDe);

        btnLamMoi.setText("Mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });
        pnlNutBam.add(btnLamMoi);

        btnDiChuyen.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnBatDau.setText("|<");
        btnBatDau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatDauActionPerformed(evt);
            }
        });
        btnDiChuyen.add(btnBatDau);

        btnLui.setText("<<");
        btnLui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuiActionPerformed(evt);
            }
        });
        btnDiChuyen.add(btnLui);

        btnTien.setText(">>");
        btnTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTienActionPerformed(evt);
            }
        });
        btnDiChuyen.add(btnTien);

        btnKetThuc.setText(">|");
        btnKetThuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKetThucActionPerformed(evt);
            }
        });
        btnDiChuyen.add(btnKetThuc);

        javax.swing.GroupLayout pnlCapNhatLayout = new javax.swing.GroupLayout(pnlCapNhat);
        pnlCapNhat.setLayout(pnlCapNhatLayout);
        pnlCapNhatLayout.setHorizontalGroup(
            pnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCapNhatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCapNhatLayout.createSequentialGroup()
                        .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(pnlCapNhatLayout.createSequentialGroup()
                        .addComponent(lblMoTaChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlCapNhatLayout.createSequentialGroup()
                        .addComponent(pnlNutBam, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDiChuyen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlCapNhatLayout.setVerticalGroup(
            pnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCapNhatLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMoTaChuyenDe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlNutBam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDiChuyen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        tabs.addTab("Cập nhât", pnlCapNhat);

        tblDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã CD", "Tên CD", "Thời Lượng", "Học Phi", "Hình"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDanhSach.setRowHeight(30);
        tblDanhSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDanhSach);

        javax.swing.GroupLayout pnlDanhSachLayout = new javax.swing.GroupLayout(pnlDanhSach);
        pnlDanhSach.setLayout(pnlDanhSachLayout);
        pnlDanhSachLayout.setHorizontalGroup(
            pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDanhSachLayout.setVerticalGroup(
            pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("Danh sách", pnlDanhSach);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQLChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblQLChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDanhSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachMouseClicked
       if (evt.getClickCount() == 2) {
            changeEnable(true);
            index = tblDanhSach.getSelectedRow();
            edit();
       }
    }//GEN-LAST:event_tblDanhSachMouseClicked

    private void lblAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnhMouseClicked
        openChooseImage();
    }//GEN-LAST:event_lblAnhMouseClicked

    private void btnSuaChuyenDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaChuyenDeActionPerformed
        update();
    }//GEN-LAST:event_btnSuaChuyenDeActionPerformed

    private void btnXoaChuyenDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaChuyenDeActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaChuyenDeActionPerformed

    private void btnThemChuyenDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemChuyenDeActionPerformed
        insert();
    }//GEN-LAST:event_btnThemChuyenDeActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        clearFomr();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnBatDauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatDauActionPerformed
        first();
    }//GEN-LAST:event_btnBatDauActionPerformed

    private void btnLuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuiActionPerformed
        previous();
    }//GEN-LAST:event_btnLuiActionPerformed

    private void btnTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTienActionPerformed
        next();
    }//GEN-LAST:event_btnTienActionPerformed

    private void btnKetThucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKetThucActionPerformed
        last();
    }//GEN-LAST:event_btnKetThucActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatDau;
    private javax.swing.JPanel btnDiChuyen;
    private javax.swing.JButton btnKetThuc;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLui;
    private javax.swing.JButton btnSuaChuyenDe;
    private javax.swing.JButton btnThemChuyenDe;
    private javax.swing.JButton btnTien;
    private javax.swing.JButton btnXoaChuyenDe;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAnh;
    private javax.swing.JLabel lblHocPhiChuyenDe;
    private javax.swing.JLabel lblMaChuyenDe;
    private javax.swing.JLabel lblMoTaChuyenDe;
    private javax.swing.JLabel lblQLChuyenDe;
    private javax.swing.JLabel lblTenChuyenDe;
    private javax.swing.JLabel lblThoiGianChuyenDe;
    private javax.swing.JPanel pnlCapNhat;
    private javax.swing.JPanel pnlDanhSach;
    private javax.swing.JPanel pnlNutBam;
    private javax.swing.JPanel pnlThongTin;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblDanhSach;
    private javax.swing.JTextField txtHocPhiChuyenDe;
    private javax.swing.JTextField txtMaChuyenDe;
    private javax.swing.JTextArea txtMoTaChuyenDe;
    private javax.swing.JTextField txtTenChuyenDe;
    private javax.swing.JTextField txtThoiLuongChuyenDe;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel tableModel;
    private ChuyenDeDAO chuyenDeDAO;
    private XImage.Size size;
    private int index;
    public void init() {
        index = -1;
        chuyenDeDAO = new ChuyenDeDAO();
        tableModel = (DefaultTableModel) tblDanhSach.getModel();
        size = new XImage().new Size(158, 185);
        fillTable();
    }

    private void fillTable() {
        tableModel.setRowCount(0);

        List<ChuyenDe> chuyenDeList = new ChuyenDeDAO().selectAll();

        chuyenDeList.forEach((x)
                -> tableModel.addRow(new Object[]{
            x.getMaCd(), x.getTenCd(), x.getThoiLuong(), x.getHocPhi(), x.getHinh()
        })
        );
    }

    private void setForm(ChuyenDe cd) {
        txtMaChuyenDe.setText(cd.getMaCd());
        txtTenChuyenDe.setText(cd.getTenCd());
        txtThoiLuongChuyenDe.setText(cd.getThoiLuong() + "");
        txtHocPhiChuyenDe.setText(cd.getHocPhi() + "");
        txtMoTaChuyenDe.setText(cd.getMota());
        
        lblAnh.setIcon(XImage.getImageIcon(cd.getHinh(), size));
        lblAnh.setToolTipText(cd.getHinh());
    }

    private void edit() {
        ChuyenDe cd = chuyenDeDAO.selectById(tblDanhSach.getValueAt(index, 0)+"");
        this.setForm(cd);
        tblDanhSach.setRowSelectionInterval(index, index);
        tabs.setSelectedIndex(0);
        changeEnable(true);
    }


    private ChuyenDe getForm() {
        String maChuyenDe = txtMaChuyenDe.getText();
        String tenChuyenDe = txtTenChuyenDe.getText();
        double hocPhi = Double.parseDouble(txtHocPhiChuyenDe.getText());
        int thoiLuong = Integer.parseInt(txtThoiLuongChuyenDe.getText());
        String moTa = txtMoTaChuyenDe.getText();
        String fileName = lblAnh.getToolTipText() == null ? "null" : lblAnh.getToolTipText();
        
        return new ChuyenDe(maChuyenDe, tenChuyenDe, moTa, fileName, hocPhi, thoiLuong);
    }
    
    private void insert() {
        try {
            
            if (isError()) return;
            
            chuyenDeDAO.insert(getForm());
            fillTable();
            MsgBox.alert(this, "Thêm thành công");
            btnThemChuyenDe.setEnabled(false);
            changeEnable(true);
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, e.getMessage());
        }
    }

    private void update() {
        try {
            
            if (isError()) {
                return;
            }
            
            chuyenDeDAO.update(getForm());
            fillTable();
            MsgBox.alert(this, "Cập nhật thành công");
        
        } catch (Exception e) {
            MsgBox.alert(this, e.getMessage());
        }
    }

    private void delete() {
        try {
            
            if (MsgBox.confirm(this, "Bạn có chắc chắn không?")) {
                chuyenDeDAO.delete(txtMaChuyenDe.getText());
                fillTable();
                XImage.delete(lblAnh.getToolTipText());
                changeEnable(false);
            }
            
        } catch (Exception e) {
            MsgBox.alert(this, e.getMessage());
        }
    }

    private void openChooseImage() {
        JFileChooser a = new JFileChooser("C:\\Users\\suong\\Pictures");
        int choose = a.showOpenDialog(this);

        if (JFileChooser.APPROVE_OPTION == choose) {
            File file = a.getSelectedFile();
            XImage.copy(file);
            lblAnh.setIcon(XImage.getImageIcon(file.getName(), size));
            lblAnh.setToolTipText(file.getName());
        }
    }

    private void clearFomr() {
        ChuyenDe cd = new ChuyenDe();
        this.setForm(cd);
        index = -1;
        changeEnable(false);
    }

    private void first() {
        index = 0;
        edit();
    }

    private void previous() {
        index--;
        if (index < 0) index = tblDanhSach.getRowCount()-1;
        edit();
    }

    private void next() {
        index++;
        if (index == tblDanhSach.getRowCount()) index = 0;
        edit();
    }

    private void last() {
        index = tblDanhSach.getRowCount()-1;
        edit();
    }
   

    private void changeEnable(boolean x) {
        if (Auth.isManager()) {
            btnXoaChuyenDe.setEnabled(x);
        } 
        btnSuaChuyenDe.setEnabled(x);
        btnThemChuyenDe.setEnabled(!x);
        txtMaChuyenDe.setEnabled(!x);
    }
    
     public boolean isError() {
        if (isEmpty()) {
            MsgBox.alert(this, "Thông tin không được trống!");
            return true;
        }
        
        if (isExists()) {
            MsgBox.alert(this, "Chuyên đề này đã tồn tại");
            return true;
        }
        
        if (!isImage()) {
            MsgBox.alert(this, "Phải chọn ảnh");
            return true;
        }
        if (!isNumber()) {
            MsgBox.alert(this, "Sai định dạng số");
            return true;
        }
        return false;
    }

    public boolean isNumber() {
        try {
            double hocphi = Double.parseDouble(txtHocPhiChuyenDe.getText());
            if (hocphi < 0) {
                MsgBox.alert(this, "học phí phải lớn hơn 0");
                return false;
            }

            int thoiluong = Integer.parseInt(txtThoiLuongChuyenDe.getText());
            if (thoiluong < 0) {
                MsgBox.alert(this, "Thời gian phải lớn hơn 0");
                return false;
            }

            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    public boolean isEmpty() {
        Component[] comArray = this.pnlThongTin.getComponents();

        for (Component x : comArray) {
            if (x instanceof JTextField && ((JTextField) x).getText().length() == 0) {
                return true;
            }
        }
        return false;
    }
    
    private boolean isImage() {
        if (lblAnh.getToolTipText() == null) {
            return false;
        }
        return true;
    }
    
    private boolean isExists() {
        return chuyenDeDAO.selectById(txtMaChuyenDe.getText()) != null;
    }
}
