/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laptrinhcity.giaodien;

import java.text.ParseException;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import laptrinhcity.DAO.ChuyenDeDAO;
import laptrinhcity.DAO.KhoaHocDAO;
import laptrinhcity.DAO.NhanVienDAO;
import laptrinhcity.entity.ChuyenDe;
import laptrinhcity.entity.KhoaHoc;
import laptrinhcity.entity.NhanVien;
import laptrinhcity.utils.Auth;
import laptrinhcity.utils.MsgBox;
import laptrinhcity.utils.XDate;

/**
 *
 * @author SuongNguyen
 */
public class QuanLyKhoaHoc extends javax.swing.JInternalFrame {

    /**
     * Creates new form QuanLyKhoaHoc1
     */
    public QuanLyKhoaHoc(int i) {
        initComponents();
        setLocation(145, 0);
        tabs.setSelectedIndex(i);
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblChuyenDe = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        pnlCapNhat = new javax.swing.JPanel();
        lblChuyende = new javax.swing.JLabel();
        txtChuyenDe = new javax.swing.JTextField();
        lblHocPhi = new javax.swing.JLabel();
        txtHocPhi = new javax.swing.JTextField();
        lblNguoiTao = new javax.swing.JLabel();
        txtNguoiTao = new javax.swing.JTextField();
        txtKhaiGiang = new javax.swing.JTextField();
        lblKhaiGiang = new javax.swing.JLabel();
        lblThoiLuong = new javax.swing.JLabel();
        txtThoiLuong = new javax.swing.JTextField();
        lblNgayTao = new javax.swing.JLabel();
        txtNgayTao = new javax.swing.JTextField();
        lblGhiChu = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        pnlNutBam = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        pnlDiChuyen = new javax.swing.JPanel();
        btnDau = new javax.swing.JButton();
        btnLui = new javax.swing.JButton();
        btnTien = new javax.swing.JButton();
        btnCuoi = new javax.swing.JButton();
        pnlDanhSach = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhoaHoc = new javax.swing.JTable();
        pnlChuyende = new javax.swing.JPanel();
        cboChuyende = new javax.swing.JComboBox<>();

        setClosable(true);
        setEnabled(false);
        setOpaque(true);

        lblChuyenDe.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblChuyenDe.setForeground(new java.awt.Color(255, 0, 0));
        lblChuyenDe.setText("KHÓA HỌC");

        pnlCapNhat.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblChuyende.setText("Chuyên đề");
        pnlCapNhat.add(lblChuyende, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 93, -1));

        txtChuyenDe.setEditable(false);
        txtChuyenDe.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtChuyenDe.setForeground(new java.awt.Color(255, 0, 0));
        txtChuyenDe.setMargin(new java.awt.Insets(2, 8, 2, 2));
        pnlCapNhat.add(txtChuyenDe, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 31, 280, 29));

        lblHocPhi.setText("Học phí");
        pnlCapNhat.add(lblHocPhi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 78, -1, -1));

        txtHocPhi.setEditable(false);
        txtHocPhi.setMargin(new java.awt.Insets(2, 8, 2, 2));
        pnlCapNhat.add(txtHocPhi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 98, 280, 29));

        lblNguoiTao.setText("Người tạo");
        pnlCapNhat.add(lblNguoiTao, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 145, -1, -1));

        txtNguoiTao.setEditable(false);
        txtNguoiTao.setMargin(new java.awt.Insets(2, 8, 2, 2));
        pnlCapNhat.add(txtNguoiTao, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 165, 280, 29));

        txtKhaiGiang.setMargin(new java.awt.Insets(2, 8, 2, 2));
        pnlCapNhat.add(txtKhaiGiang, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 280, 29));

        lblKhaiGiang.setText("Khai giảng");
        pnlCapNhat.add(lblKhaiGiang, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 11, 93, -1));

        lblThoiLuong.setText("Thời lượng");
        pnlCapNhat.add(lblThoiLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, -1, -1));

        txtThoiLuong.setEditable(false);
        txtThoiLuong.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtThoiLuong.setMargin(new java.awt.Insets(2, 8, 2, 2));
        pnlCapNhat.add(txtThoiLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, 280, 27));

        lblNgayTao.setText("Ngày tạo");
        pnlCapNhat.add(lblNgayTao, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 150, -1, -1));

        txtNgayTao.setEditable(false);
        txtNgayTao.setMargin(new java.awt.Insets(2, 8, 2, 2));
        pnlCapNhat.add(txtNgayTao, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, 280, 26));

        lblGhiChu.setText("Ghi chú");
        pnlCapNhat.add(lblGhiChu, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 212, -1, -1));

        txtGhiChu.setColumns(20);
        txtGhiChu.setLineWrap(true);
        txtGhiChu.setRows(5);
        txtGhiChu.setWrapStyleWord(true);
        txtGhiChu.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane2.setViewportView(txtGhiChu);

        pnlCapNhat.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 232, 630, 62));

        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout1.setAlignOnBaseline(true);
        pnlNutBam.setLayout(flowLayout1);

        btnThem.setText("Thêm");
        btnThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        pnlNutBam.add(btnThem);

        btnSua.setText("Sửa");
        btnSua.setEnabled(false);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        pnlNutBam.add(btnSua);

        btnXoa.setText("Xóa");
        btnXoa.setEnabled(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        pnlNutBam.add(btnXoa);

        btnLamMoi.setText("Mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });
        pnlNutBam.add(btnLamMoi);

        pnlCapNhat.add(pnlNutBam, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 318, 310, -1));

        pnlDiChuyen.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnDau.setText("|<");
        btnDau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDauActionPerformed(evt);
            }
        });
        pnlDiChuyen.add(btnDau);

        btnLui.setText("<<");
        btnLui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuiActionPerformed(evt);
            }
        });
        pnlDiChuyen.add(btnLui);

        btnTien.setText(">>");
        btnTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTienActionPerformed(evt);
            }
        });
        pnlDiChuyen.add(btnTien);

        btnCuoi.setText(">|");
        btnCuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCuoiActionPerformed(evt);
            }
        });
        pnlDiChuyen.add(btnCuoi);

        pnlCapNhat.add(pnlDiChuyen, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 320, 310, 35));

        tabs.addTab("Cập nhật", pnlCapNhat);

        tblKhoaHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KH", "Thời lượng", "Học phí", "Khai giảng", "Tạo bởi", "Ngày tạo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblKhoaHoc.setRowMargin(5);
        tblKhoaHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhoaHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKhoaHoc);

        javax.swing.GroupLayout pnlDanhSachLayout = new javax.swing.GroupLayout(pnlDanhSach);
        pnlDanhSach.setLayout(pnlDanhSachLayout);
        pnlDanhSachLayout.setHorizontalGroup(
            pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDanhSachLayout.setVerticalGroup(
            pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("Danh sách", pnlDanhSach);

        pnlChuyende.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cboChuyende.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboChuyendeItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlChuyendeLayout = new javax.swing.GroupLayout(pnlChuyende);
        pnlChuyende.setLayout(pnlChuyendeLayout);
        pnlChuyendeLayout.setHorizontalGroup(
            pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChuyendeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboChuyende, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlChuyendeLayout.setVerticalGroup(
            pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChuyendeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboChuyende, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabs, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pnlChuyende, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblKhoaHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhoaHocMouseClicked
        index = tblKhoaHoc.getSelectedRow();
        edit();
    }//GEN-LAST:event_tblKhoaHocMouseClicked

    private void cboChuyendeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboChuyendeItemStateChanged
        selectChuyenDe();
    }//GEN-LAST:event_cboChuyendeItemStateChanged

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        clearForm();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnDauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDauActionPerformed
        first();
    }//GEN-LAST:event_btnDauActionPerformed

    private void btnLuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuiActionPerformed
        previous();
    }//GEN-LAST:event_btnLuiActionPerformed

    private void btnTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTienActionPerformed
        next();
    }//GEN-LAST:event_btnTienActionPerformed

    private void btnCuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCuoiActionPerformed
        last();
    }//GEN-LAST:event_btnCuoiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCuoi;
    private javax.swing.JButton btnDau;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLui;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTien;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboChuyende;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblChuyenDe;
    private javax.swing.JLabel lblChuyende;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblHocPhi;
    private javax.swing.JLabel lblKhaiGiang;
    private javax.swing.JLabel lblNgayTao;
    private javax.swing.JLabel lblNguoiTao;
    private javax.swing.JLabel lblThoiLuong;
    private javax.swing.JPanel pnlCapNhat;
    private javax.swing.JPanel pnlChuyende;
    private javax.swing.JPanel pnlDanhSach;
    private javax.swing.JPanel pnlDiChuyen;
    private javax.swing.JPanel pnlNutBam;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblKhoaHoc;
    private javax.swing.JTextField txtChuyenDe;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtHocPhi;
    private javax.swing.JTextField txtKhaiGiang;
    private javax.swing.JTextField txtNgayTao;
    private javax.swing.JTextField txtNguoiTao;
    private javax.swing.JTextField txtThoiLuong;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel tableModel;
    KhoaHocDAO khoaHocDAO;
    ChuyenDeDAO chuyenDeDAO;
    NhanVienDAO nhanVienDAO;
    int index;
    String pattern;
    DefaultComboBoxModel combox;
    public void init() {
        index = 0;
        pattern = "dd-MM-yyyy";
        khoaHocDAO = new KhoaHocDAO();
        chuyenDeDAO = new ChuyenDeDAO();
        nhanVienDAO = new NhanVienDAO();
        tableModel = (DefaultTableModel) tblKhoaHoc.getModel();
        combox = (DefaultComboBoxModel) cboChuyende.getModel();
        loadChuyenDe();
    }
    
    
    private void loadChuyenDe() {
        combox.removeAllElements();
        List<ChuyenDe> chuyenDeList = chuyenDeDAO.selectAll();
        
        chuyenDeList.forEach( (x) ->
            combox.addElement(x)
        );
    }
    
    public void fillTable() {
        tableModel.setRowCount(0);
        ChuyenDe cd = (ChuyenDe) cboChuyende.getSelectedItem();
        List<KhoaHoc> khoaHocList = khoaHocDAO.selectByMaChuyenDe(cd.getMaCd());
        khoaHocList.forEach( (x) -> 
            {
                NhanVien nv = nhanVienDAO.selectById(x.getMaNhanVien());
                tableModel.addRow(new Object[] 
                {
                    x.getMaKhoaHoc(), x.getThoiLuong(), x.getHocPhi(), 
                    XDate.toString(x.getNgayKhaiGiang(), pattern), 
                    nv.getHoTen(), XDate.toString(x.getNgayTao(), pattern)
                });
            }
        );
    }
    
    private void selectChuyenDe() {
        ChuyenDe cd = (ChuyenDe) cboChuyende.getSelectedItem();
        txtChuyenDe.setText(cd.getTenCd());
        txtGhiChu.setText(cd.getTenCd());
        txtThoiLuong.setText(cd.getThoiLuong()+"");
        txtHocPhi.setText(cd.getHocPhi()+"");
        txtKhaiGiang.setText("");
        txtGhiChu.setText("");
        txtNguoiTao.setText(Auth.user.getHoTen());
        txtNgayTao.setText(XDate.toString(new Date(), pattern));
        
        fillTable();
        tabs.setSelectedIndex(1);
    }
    
    private void setForm(KhoaHoc kh) {
        NhanVien nv = nhanVienDAO.selectById(kh.getMaNhanVien());
        txtGhiChu.setText(kh.getGhiChu());
        txtThoiLuong.setText(kh.getThoiLuong()+"");
        txtHocPhi.setText(kh.getHocPhi()+"");
        txtNguoiTao.setText(nv.getHoTen());
        txtNgayTao.setText(XDate.toString(kh.getNgayTao(), pattern));
        txtKhaiGiang.setText(XDate.toString(kh.getNgayKhaiGiang(), pattern));
    }
    
    private KhoaHoc getForm() {
        int thoiLuong = Integer.parseInt(txtThoiLuong.getText());
        double hocPhi = Double.parseDouble(txtHocPhi.getText());
        String ghiChu = txtGhiChu.getText();
        Date ngayKhaiGiang = XDate.getDate(txtKhaiGiang.getText(), pattern);
        Date ngayTao = XDate.getDate(txtNgayTao.getText(), pattern);
        String maNhanVien = Auth.user.getMaNhanVien();
        String maChuyenDe = ((ChuyenDe) cboChuyende.getSelectedItem()).getMaCd();
        int makh = tblKhoaHoc.getRowCount() == 0 ? 0 : (Integer) tblKhoaHoc.getValueAt(index, 0);
        return new KhoaHoc(makh,hocPhi, thoiLuong, ngayKhaiGiang, ghiChu, maChuyenDe, maNhanVien, ngayTao);
    }
    
    private void edit() {
        KhoaHoc kh = khoaHocDAO.selectById((Integer) tblKhoaHoc.getValueAt(index, 0));
        this.setForm(kh);
        tabs.setSelectedIndex(0);
        changeEnable(true);
        tblKhoaHoc.setRowSelectionInterval(index, index);
    }
    

    private void insert() {
        try {
            if (isError()) return;
            
            khoaHocDAO.insert(getForm());
            MsgBox.alert(this, "Thêm thành công");
            fillTable();
            changeEnable(true);
            index = tblKhoaHoc.getRowCount()-1;
        } catch (Exception e) {
            MsgBox.alert(this, e.getMessage());
        }
    }
    
    private void update(){
        try {
            if (isError()) return;
            
            khoaHocDAO.update(getForm());
            MsgBox.alert(this, "Cập nhật thành công");
            fillTable();
        } catch (Exception e) {
            MsgBox.alert(this, e.getMessage());
        }
    }
    
    private void delete() {
        try {
            if (MsgBox.confirm(this, "Bạn có chắc chắn không!")) {
                khoaHocDAO.delete((Integer) tblKhoaHoc.getValueAt(index, 0));
                MsgBox.alert(this, "Xóa thành công");
                fillTable();
                changeEnable(false);
            }
        } catch (Exception e) {
            MsgBox.alert(this, e.getMessage());
        }
    }

    private void clearForm() {
        txtKhaiGiang.setText("");
        txtGhiChu.setText("");
        changeEnable(false);
        index = 0;
    }
    
    private void changeEnable(boolean x) {
        if (Auth.isManager()) {
            btnXoa.setEnabled(x);
        }
        btnSua.setEnabled(x);
        btnThem.setEnabled(!x);
    }

    private void first() {
        index = 0;
        edit();
    }
    
    private void previous() {
        index--;
        if (index < 0) {
            index = tableModel.getRowCount() - 1;
        }
        edit();
    }

    private void next() {
        index++;
        if (index == tableModel.getRowCount()) {
            index = 0;
        }
        edit();
    }

    private void last() {
        index = tableModel.getRowCount() - 1;
        edit();
    }
    
    private boolean isError() {
        if (isEmpty()) {
            MsgBox.alert(this, "Ngày khai giảng không được trống!");
            return true;
        }
        
        if (!isDate()) {
            MsgBox.alert(this, "Ngày khai giảng sai định dạng!");
            return true;
        }
        
        if (isPast()) {
            MsgBox.alert(this, "Ngày khai giảng này đã xảy ra!");
            return true;
        }
        return false;
    }
    
    private boolean isEmpty() {
        if (txtKhaiGiang.getText().length() == 0) {
            return true;
        }
        return false;
    }
    
    private boolean isDate() {
        try {
            XDate.getDate(txtKhaiGiang.getText(), pattern);
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    
    private boolean isPast() {
        Date date = XDate.getDate(txtKhaiGiang.getText(), "dd-MM-yyyy");
        Date today = XDate.getDateNow();
        
        return (date.getTime()-today.getTime()) < 0;
    }
}
