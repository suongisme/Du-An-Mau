/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laptrinhcity.doimatkhau;

import java.awt.Color;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import laptrinhcity.DAO.NhanVienDAO;
import laptrinhcity.utils.Auth;
import laptrinhcity.utils.MsgBox;

/**
 *
 * @author SuongNguyen
 */
public class CuaSoDoiMK1 extends javax.swing.JInternalFrame {

    /**
     * Creates new form CuaSoDoiMK1
     */
    public CuaSoDoiMK1() {
        initComponents();
        setLocation(245, 120);
        txtTenDangNhap.setText(Auth.user.getHoTen());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblImagePersonal = new javax.swing.JLabel();
        lblDoiMauKhau1 = new javax.swing.JLabel();
        txtTenDangNhap = new javax.swing.JTextField();
        txtMatKhauCu = new javax.swing.JPasswordField();
        txtMatKhauMoi = new javax.swing.JPasswordField();
        txtXacNhanMk = new javax.swing.JPasswordField();
        btnDoi = new javax.swing.JButton();
        ckbHienThi = new javax.swing.JCheckBox();

        setClosable(true);

        lblImagePersonal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/laptrinhcity/hinh/avatar1.png"))); // NOI18N

        lblDoiMauKhau1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblDoiMauKhau1.setText("Đổi Mật Khẩu");

        txtTenDangNhap.setEditable(false);
        txtTenDangNhap.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtTenDangNhap.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtTenDangNhap.setMargin(new java.awt.Insets(2, 8, 2, 2));

        txtMatKhauCu.setForeground(new java.awt.Color(153, 153, 153));
        txtMatKhauCu.setText("Mật khẩu cũ");
        txtMatKhauCu.setEchoChar('\u0000');
        txtMatKhauCu.setMargin(new java.awt.Insets(2, 8, 2, 2));
        txtMatKhauCu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMatKhauCuFocusGained(evt);
            }
        });

        txtMatKhauMoi.setForeground(new java.awt.Color(153, 153, 153));
        txtMatKhauMoi.setText("Mẩu khẩu mới");
        txtMatKhauMoi.setEchoChar('\u0000');
        txtMatKhauMoi.setMargin(new java.awt.Insets(2, 8, 2, 2));
        txtMatKhauMoi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMatKhauMoiFocusGained(evt);
            }
        });

        txtXacNhanMk.setForeground(new java.awt.Color(153, 153, 153));
        txtXacNhanMk.setText("Xác nhận mật khẩu mới");
        txtXacNhanMk.setEchoChar('\u0000');
        txtXacNhanMk.setMargin(new java.awt.Insets(2, 8, 2, 2));
        txtXacNhanMk.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtXacNhanMkFocusGained(evt);
            }
        });

        btnDoi.setBackground(new java.awt.Color(0, 0, 0));
        btnDoi.setForeground(new java.awt.Color(255, 255, 255));
        btnDoi.setText("Xác nhận");
        btnDoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiActionPerformed(evt);
            }
        });

        ckbHienThi.setText("Hiện thị mật khẩu");
        ckbHienThi.setEnabled(false);
        ckbHienThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbHienThiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblImagePersonal)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(txtTenDangNhap))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMatKhauCu, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtMatKhauMoi, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtXacNhanMk, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))))
                        .addGap(0, 4, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ckbHienThi)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(215, 215, 215)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnDoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblDoiMauKhau1)
                            .addGap(0, 86, Short.MAX_VALUE)))
                    .addContainerGap()))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtMatKhauCu, txtMatKhauMoi, txtTenDangNhap, txtXacNhanMk});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMatKhauCu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMatKhauMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtXacNhanMk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ckbHienThi))
                    .addComponent(lblImagePersonal))
                .addContainerGap(52, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblDoiMauKhau1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                    .addComponent(btnDoi, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtMatKhauCu, txtMatKhauMoi, txtTenDangNhap, txtXacNhanMk});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMatKhauCuFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauCuFocusGained
        changeStatus(txtMatKhauCu);
    }//GEN-LAST:event_txtMatKhauCuFocusGained

    private void txtMatKhauMoiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauMoiFocusGained
        changeStatus(txtMatKhauMoi);
    }//GEN-LAST:event_txtMatKhauMoiFocusGained

    private void txtXacNhanMkFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtXacNhanMkFocusGained
        changeStatus(txtXacNhanMk);
    }//GEN-LAST:event_txtXacNhanMkFocusGained

    private void btnDoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiActionPerformed
        doiMatKhau();
    }//GEN-LAST:event_btnDoiActionPerformed

    private void ckbHienThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbHienThiActionPerformed
        showPassword();
    }//GEN-LAST:event_ckbHienThiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDoi;
    private javax.swing.JCheckBox ckbHienThi;
    private javax.swing.JLabel lblDoiMauKhau1;
    private javax.swing.JLabel lblImagePersonal;
    private javax.swing.JPasswordField txtMatKhauCu;
    private javax.swing.JPasswordField txtMatKhauMoi;
    private javax.swing.JTextField txtTenDangNhap;
    private javax.swing.JPasswordField txtXacNhanMk;
    // End of variables declaration//GEN-END:variables

    private void doiMatKhau() {
        String matKhauCu = String.valueOf(txtMatKhauCu.getPassword());
        String matKhauMoi = String.valueOf(txtMatKhauMoi.getPassword());
        String xacNhanMatKhau = String.valueOf(txtXacNhanMk.getPassword());
        
        if (!Auth.user.getMatKhau().equals(matKhauCu)) {
            MsgBox.alert(this, "Mật khẩu cũ không đúng!");
            return;
        }
        
        if (!this.isLength()) return;
        
        if(!matKhauMoi.equals(xacNhanMatKhau)) {
            MsgBox.alert(this, "Mật khẩu mới phải trùng với xác nhận mật khẩu");
            return;
        }
        
        Auth.user.setMatKhau(matKhauMoi);
        new NhanVienDAO().update(Auth.user);
        MsgBox.alert(this, "Đổi mật khẩu thành công");
        this.dispose();
    }
    
    private void changeStatus(JTextField x) {
        changeColor(x);
        clearText(x);
        ckbHienThi.setEnabled(true);
        if (!ckbHienThi.isSelected()) ((JPasswordField) x).setEchoChar('\u25cf');
    }
    
    private void changeColor(JTextField x) {
        x.setForeground(Color.BLACK);
    }
    
    private void clearText(JTextField x) {
        x.setText("");
    }
    
    private void showPassword() {
        if (ckbHienThi.isSelected()) {
            setEcho('\u0000');
        } else {
            setEcho('\u25cf');
        }
    }
    
    private void setEcho(char echo) {
        txtMatKhauCu.setEchoChar(echo);
        txtMatKhauMoi.setEchoChar(echo);
        txtXacNhanMk.setEchoChar(echo);
    }
    
    private boolean isLength() {
        if (String.valueOf(txtMatKhauMoi.getPassword()).length() < 8) {
            MsgBox.alert(this, "Mật khẩu phải lớn hơn 8");
            txtMatKhauMoi.requestFocus();
            return false;
        }
        return true;
    }
}
