/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laptrinhcity.doimatkhau;

import java.awt.Color;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import laptrinhcity.DAO.NhanVienDAO;
import laptrinhcity.utils.XTheme;
import laptrinhcity.utils.Auth;
import laptrinhcity.utils.MsgBox;

/**
 *
 * @author SuongNguyen
 */
public class CuaSoDoiMk extends javax.swing.JFrame {

    /**
     * Creates new form ChangePasswordJFrame
     */
    public CuaSoDoiMk() {
        initComponents();
        lblImagePersonal.requestFocus();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DoiMatKhauDesktop = new javax.swing.JDesktopPane();
        lblImagePersonal = new javax.swing.JLabel();
        lblDoiMauKhau1 = new javax.swing.JLabel();
        txtTenDangNhap = new javax.swing.JTextField();
        txtMatKhauCu = new javax.swing.JPasswordField();
        txtMatKhauMoi = new javax.swing.JPasswordField();
        txtXacNhanMk = new javax.swing.JPasswordField();
        btnDoi = new javax.swing.JButton();
        ckbHienThi = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Change Password");

        lblImagePersonal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/laptrinhcity/hinh/avatar1.png"))); // NOI18N

        lblDoiMauKhau1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblDoiMauKhau1.setText("Đổi Mật Khẩu");

        txtTenDangNhap.setForeground(new java.awt.Color(153, 153, 153));
        txtTenDangNhap.setText("Tên đăng nhập");
        txtTenDangNhap.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtTenDangNhap.setMargin(new java.awt.Insets(2, 8, 2, 2));
        txtTenDangNhap.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTenDangNhapFocusGained(evt);
            }
        });

        txtMatKhauCu.setForeground(new java.awt.Color(153, 153, 153));
        txtMatKhauCu.setText("Mật khẩu cũ");
        txtMatKhauCu.setEchoChar('\u0000');
        txtMatKhauCu.setMargin(new java.awt.Insets(2, 8, 2, 2));
        txtMatKhauCu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMatKhauCuFocusGained(evt);
            }
        });

        txtMatKhauMoi.setForeground(new java.awt.Color(153, 153, 153));
        txtMatKhauMoi.setText("Mẩu khẩu mới");
        txtMatKhauMoi.setEchoChar('\u0000');
        txtMatKhauMoi.setMargin(new java.awt.Insets(2, 8, 2, 2));
        txtMatKhauMoi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMatKhauMoiFocusGained(evt);
            }
        });

        txtXacNhanMk.setForeground(new java.awt.Color(153, 153, 153));
        txtXacNhanMk.setText("Xác nhận mật khẩu mới");
        txtXacNhanMk.setEchoChar('\u0000');
        txtXacNhanMk.setMargin(new java.awt.Insets(2, 8, 2, 2));
        txtXacNhanMk.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtXacNhanMkFocusGained(evt);
            }
        });

        btnDoi.setBackground(new java.awt.Color(0, 0, 0));
        btnDoi.setForeground(new java.awt.Color(255, 255, 255));
        btnDoi.setText("Xác nhận");
        btnDoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiActionPerformed(evt);
            }
        });

        ckbHienThi.setSelected(true);
        ckbHienThi.setText("Hiện thị mật khẩu");
        ckbHienThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbHienThiActionPerformed(evt);
            }
        });

        DoiMatKhauDesktop.setLayer(lblImagePersonal, javax.swing.JLayeredPane.DEFAULT_LAYER);
        DoiMatKhauDesktop.setLayer(lblDoiMauKhau1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        DoiMatKhauDesktop.setLayer(txtTenDangNhap, javax.swing.JLayeredPane.DEFAULT_LAYER);
        DoiMatKhauDesktop.setLayer(txtMatKhauCu, javax.swing.JLayeredPane.DEFAULT_LAYER);
        DoiMatKhauDesktop.setLayer(txtMatKhauMoi, javax.swing.JLayeredPane.DEFAULT_LAYER);
        DoiMatKhauDesktop.setLayer(txtXacNhanMk, javax.swing.JLayeredPane.DEFAULT_LAYER);
        DoiMatKhauDesktop.setLayer(btnDoi, javax.swing.JLayeredPane.DEFAULT_LAYER);
        DoiMatKhauDesktop.setLayer(ckbHienThi, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout DoiMatKhauDesktopLayout = new javax.swing.GroupLayout(DoiMatKhauDesktop);
        DoiMatKhauDesktop.setLayout(DoiMatKhauDesktopLayout);
        DoiMatKhauDesktopLayout.setHorizontalGroup(
            DoiMatKhauDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 466, Short.MAX_VALUE)
            .addGroup(DoiMatKhauDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(DoiMatKhauDesktopLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblImagePersonal)
                    .addGap(41, 41, 41)
                    .addGroup(DoiMatKhauDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnDoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDoiMauKhau1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTenDangNhap)
                        .addComponent(txtMatKhauCu)
                        .addComponent(txtMatKhauMoi)
                        .addComponent(txtXacNhanMk, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DoiMatKhauDesktopLayout.createSequentialGroup()
                            .addComponent(ckbHienThi)
                            .addGap(9, 9, 9)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        DoiMatKhauDesktopLayout.setVerticalGroup(
            DoiMatKhauDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 280, Short.MAX_VALUE)
            .addGroup(DoiMatKhauDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(DoiMatKhauDesktopLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblDoiMauKhau1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(DoiMatKhauDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(DoiMatKhauDesktopLayout.createSequentialGroup()
                            .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtMatKhauCu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtMatKhauMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtXacNhanMk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ckbHienThi))
                        .addComponent(lblImagePersonal))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                    .addComponent(btnDoi)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DoiMatKhauDesktop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DoiMatKhauDesktop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ckbHienThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbHienThiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbHienThiActionPerformed

    private void btnDoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDoiActionPerformed

    private void txtXacNhanMkFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtXacNhanMkFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtXacNhanMkFocusGained

    private void txtMatKhauMoiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauMoiFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatKhauMoiFocusGained

    private void txtMatKhauCuFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauCuFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatKhauCuFocusGained

    private void txtTenDangNhapFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenDangNhapFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenDangNhapFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
//        <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CuaSoDoiMk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CuaSoDoiMk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CuaSoDoiMk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CuaSoDoiMk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
        //</editor-fold>
        XTheme.darkTheme();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CuaSoDoiMk().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JDesktopPane DoiMatKhauDesktop;
    private javax.swing.JButton btnDoi;
    private javax.swing.JCheckBox ckbHienThi;
    private javax.swing.JLabel lblDoiMauKhau1;
    private javax.swing.JLabel lblImagePersonal;
    private javax.swing.JPasswordField txtMatKhauCu;
    private javax.swing.JPasswordField txtMatKhauMoi;
    private javax.swing.JTextField txtTenDangNhap;
    private javax.swing.JPasswordField txtXacNhanMk;
    // End of variables declaration//GEN-END:variables

    private void changeColorTextOf(JTextField text) {
        text.setText("");
        text.setForeground(Color.BLACK);
    }

    private void changeVisibleEchoCharOf(JPasswordField password) {
        password.setEchoChar('\u0000');
    }
    
    private void changeHiddenEchoCharOf(JPasswordField password) {
        password.setEchoChar('\u25cf');
    }
    
    public void showPassword() {
        changeVisibleEchoCharOf(txtMatKhauCu);
        changeVisibleEchoCharOf(txtMatKhauMoi);
        changeVisibleEchoCharOf(txtXacNhanMk);
    }
    
    public void hidePassword() {
        changeHiddenEchoCharOf(txtXacNhanMk);
        changeHiddenEchoCharOf(txtMatKhauCu);
        changeHiddenEchoCharOf(txtMatKhauMoi);
    }

    private void doiMK() {
        String tenDangNhap = txtTenDangNhap.getText();
        String matKhauCu = String.valueOf(txtMatKhauCu.getPassword());
        String matKhauMoi = String.valueOf(txtMatKhauMoi.getPassword());
        String xacNhanMatKhau = String.valueOf(txtXacNhanMk.getPassword());
        if (!Auth.user.getMaNhanVien().equals(tenDangNhap) || !Auth.user.getMatKhau().equals(matKhauCu)) {
            MsgBox.alert(this, "Không phải tài khoản đang dùng");
            return;
        }
        
        if(!matKhauMoi.equals(xacNhanMatKhau)) {
            MsgBox.alert(this, "Mật khẩu mới phải trùng với xác nhận mật khẩu");
            return;
        }
        
        Auth.user.setMatKhau(matKhauMoi);
        new NhanVienDAO().update(Auth.user);
        MsgBox.alert(this, "Đổi mật khẩu thành công");
        this.dispose();
    }
}
